{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"ReduxReducer": {
		"prefix": "reducer",
		"body": [
			"const $1Reducer: Reducer<${2:SomeReducerState}> = (state = ${3:null}, action: ${4:State}Actions) => {",
			"  switch (action.type) {",
			"    case $0:",
			"",
			"    default:",
			"      return state;",
			"  }",
			"};"
		]
	},
	"AsyncAction": {
		"prefix": "action",
		"body": [
			"export const $1Actions = createAsyncAction(",
			"  '@@$2_REQUEST',",
			"  '@@$2_SUCCESS',",
			"  '@@$2_FAILURE'",
			")<void, ${3:void}, Error>();",
			"",
			"export const $1 = (): ThunkAction<Promise<void>, ApplicationState, void, ${4:State}Actions> => {",
			"  return async (dispatch): Promise<void> => {",
			"    // TODO Work :) ",
			"  };",
			"};",
		]
	}
}